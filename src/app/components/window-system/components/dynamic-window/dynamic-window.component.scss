.window-modal {
  position: fixed;
  border-radius: 12px;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.2);
  overflow: hidden;
  transition: box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
              border 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(10px);
  
  &:hover {
    box-shadow: 0 15px 60px rgba(0, 0, 0, 0.2);
  }
  
  &.window-minimized {
    transform: scale(0.1) !important;
    opacity: 0;
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  &.window-animating {
    pointer-events: none;
  }
  
  // Disable transitions when dragging for immediate response
  &.cdk-drag-dragging {
    transition: none !important;
    will-change: transform;
    // Add subtle shadow during drag for visual feedback
    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.2), 
                0 8px 24px rgba(0, 0, 0, 0.15) !important;
    
    // Prevent pointer events on children during drag for performance
    * {
      pointer-events: none;
    }
  }
  
  // Improve dragging performance - always ready for transform
  &.cdk-drag {
    will-change: transform;
    transform-style: preserve-3d;
    backface-visibility: hidden;
  }

  // Override CDK drag positioning to use our custom positioning
  &.cdk-drag:not(.cdk-drag-placeholder) {
    // Reset any CDK drag transforms since we handle positioning manually
    &:not(.cdk-drag-dragging) {
      transform: none !important;
    }
  }
  
  // Override mat-card default styles
  .mdc-card {
    border-radius: 12px;
  }
}

.window-title-bar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 40px;
  padding: 0 20px;
  user-select: none;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  margin: 0;
  
  &.draggable {
    cursor: move;
  }
  
  .window-title {
    display: flex;
    align-items: center;
    gap: 12px;
    flex: 1;
    min-width: 0;
    height: 100%;
    
    .window-icon {
      font-size: 20px;
      width: 20px;
      height: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0.9;
      flex-shrink: 0;
    }
    
    .title-text {
      font-weight: 600;
      font-size: 14px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      margin: 0;
    }
  }
  
  .window-controls {
    display: flex;
    gap: 8px;
    align-items: center;
    height: 100%;
    
    .control-btn {
      width: 20px;
      height: 20px;
      color: white;
      
      // Override default mini-fab styles
      .mdc-fab {
        width: 20px;
        height: 20px;
        background-color: transparent;
        box-shadow: none;
      }
      
      mat-icon {
        font-size: 14px;
        width: 14px;
        height: 14px;
      }
      
      &:hover {
        .mdc-fab {
          background-color: rgba(255, 255, 255, 0.15);
        }
      }
      
      &.close-btn:hover {
        .mdc-fab {
          background-color: #dc3545;
        }
      }
      
      &.minimize-btn:hover {
        .mdc-fab {
          background-color: #ffc107;
          color: #212529;
        }
      }
      
      &.maximize-btn:hover {
        .mdc-fab {
          background-color: #28a745;
        }
      }
    }
  }
}

.window-content {
  height: calc(100% - 130px);
  overflow: hidden; // Hide overflow on the container
  position: relative;
  
  // The actual scrolling happens in the inner container
  .scroll-inner {
    height: 100%;
    overflow-y: auto;
    overflow-x: hidden;
    scroll-behavior: smooth;
    
    // Allow any component to render naturally
    // No matter how tall it grows, it will scroll
    > * {
      display: block;
      width: 100%;
    }
  }
}

// Resize handles
.resize-handles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  
  .resize-handle {
    position: absolute;
    pointer-events: all;
    
    &.resize-handle-n {
      top: 0;
      left: 8px;
      right: 8px;
      height: 4px;
      cursor: n-resize;
    }
    
    &.resize-handle-s {
      bottom: 0;
      left: 8px;
      right: 8px;
      height: 4px;
      cursor: s-resize;
    }
    
    &.resize-handle-e {
      top: 8px;
      bottom: 8px;
      right: 0;
      width: 4px;
      cursor: e-resize;
    }
    
    &.resize-handle-w {
      top: 8px;
      bottom: 8px;
      left: 0;
      width: 4px;
      cursor: w-resize;
    }
    
    &.resize-handle-ne {
      top: 0;
      right: 0;
      width: 8px;
      height: 8px;
      cursor: ne-resize;
    }
    
    &.resize-handle-nw {
      top: 0;
      left: 0;
      width: 8px;
      height: 8px;
      cursor: nw-resize;
    }
    
    &.resize-handle-se {
      bottom: 0;
      right: 0;
      width: 8px;
      height: 8px;
      cursor: se-resize;
    }
    
    &.resize-handle-sw {
      bottom: 0;
      left: 0;
      width: 8px;
      height: 8px;
      cursor: sw-resize;
    }
    
    // Visual feedback on hover
    &:hover {
      background-color: rgba(99, 102, 241, 0.3);
    }
  }
}

// Mobile responsiveness
@media (max-width: 768px) {
  .window-modal {
    width: 95vw !important;
    height: 90vh !important;
    transform: translate(2.5vw, 5vh) !important;
  }
  
  .window-title-bar {
    height: 58px;
    padding: 0 16px;
    
    .control-btn {
      width: 32px;
      height: 32px;
      min-width: 32px;
      
      mat-icon {
        font-size: 20px;
        width: 20px;
        height: 20px;
      }
    }
  }
  
  .window-content {
    height: calc(100% - 58px);
  }
}
